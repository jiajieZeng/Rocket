/****************************************************
 *
 * ****     ***     ****    *   *    *****    *****
 * *  *    *   *   *        ****     ***        *
 * *   *    ***     ****    *   *    *****      *
 *
 * ${FILE_NAME}
 * ${CREATE_TIME}
 * Generated by rocket framework rocket_generator.py
 * File will not generate while exist
 * Allow editing
****************************************************/


#include <rocket/common/log.h>
${INCLUDE_INTERFACE_HEADER_FILE}
${INCLUDE_INTERFACEBASE_HEADER_FILE}
${INCLUDE_PB_HEADER}

namespace ${PROJECT_NAME} {

${CLASS_NAME}::${CLASS_NAME}(const ${REQUEST_TYPE}* request, ${RESPONSE_TYPE}* response, 
    rocket::RpcClosure* done, rocket::RpcController* controller)
  : Interface(dynamic_cast<const google::protobuf::Message*>(request), dynamic_cast<google::protobuf::Message*>(response), done, controller),
    m_request(request), 
    m_response(response) {
  APPINFOLOG("In|request:{%s}", request->ShortDebugString().c_str());
}

${CLASS_NAME}::~${CLASS_NAME}() {
  APPINFOLOG("Out|response:{%s}", m_response->ShortDebugString().c_str());
}

void ${CLASS_NAME}::run() {

  //
  // Run your business logic at here
  // 

  m_response->set_ret_code(0);
  m_response->set_res_info("OK");

}

void ${CLASS_NAME}::setError(int code, const std::string& err_info) {
  m_response->set_ret_code(code);
  m_response->set_res_info(err_info);
}

}